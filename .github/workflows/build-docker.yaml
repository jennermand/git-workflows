name: Build and Push Docker Image

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_call:
    outputs:
      version:
        description: name of image
        value: ${{ jobs.build-and-push.outputs.version }}
    inputs:
      image-name:
        required: true
        type: string
      buildid:
        required: false
        type: string
        default: "1.0.${{ github.run_number  }}"
      project:
        required: true
        type: string
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs: 
      version:  ${{ steps.output.outputs.version }}
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: "arm64,arm"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Harbor Registry
        uses: docker/login-action@v3
        with:
          registry: harbor.mongodb.dk
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}
      
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: harbor.mongodb.dk/${{ inputs.project }}/${{ inputs.image-name }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern=${{ inputs.buildid }}
          labels: ${{ steps.meta.outputs.labels }}
          
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: harbor.mongodb.dk/${{ inputs.project }}/${{ inputs.image-name }}:${{ inputs.buildid }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
    
      - name: Set output image name
        id: output        
        run: |          
          image_name="${{ inputs.buildid }}"
          echo "version=${image_name}" >> $GITHUB_OUTPUT
